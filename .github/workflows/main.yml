name: ci

on:
  push:
    branches:
      - "main"
jobs:
  execute-pipeline:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      SERVICE_REGISTRY_ENDPOINT: not_required_but_cannot_be_null
      AXIS_CONVERTER_ENDPOINT: not_required_but_cannot_be_null

    # check for pull_requests:
    #if: github.event_name != 'pull_request' || github.event.action == 'closed'
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        path: simcomp-services
        
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
        
    - name: Build commons
      working-directory: simcomp-services/commons
      run: mvn clean install

    - name: Build service-registry
      working-directory: simcomp-services/service-registry
      run: mvn -B package
      
    - name: Build demo-adaptor
      working-directory: simcomp-services/demo-adaptor
      run: mvn -B package
      env:
        ADAPTOR_HOST: not_required_but_cannot_be_null

    - name: Build webots-adaptor
      working-directory: simcomp-services/webots-adaptor
      run: mvn -B package
      env:
        ADAPTOR_HOST: not_required_but_cannot_be_null

    - name: Build azure-adapter
      working-directory: simcomp-services/azure-adapter
      run: mvn -B package
      env:
        ADAPTOR_HOST: not_required_but_cannot_be_null

    - name: Build adaptor-manager
      working-directory: simcomp-services/manager
      run: mvn -B package

    - name: Build axis-converter
      working-directory: simcomp-services/axis-converter
      run: mvn -B package

    - name: Publish commons jar
      uses: actions/upload-artifact@v3
      with:
        name: commons-jar
        path: simcomp-services/commons/target/*.jar

    - name: Consolidate Coverage Reports
      run: |
        mkdir -p ./simcomp-services/coverage-reports/manager
        mkdir -p ./simcomp-services/coverage-reports/registry
        mkdir -p ./simcomp-services/coverage-reports/webots-adaptor
        mkdir -p ./simcomp-services/coverage-reports/axis-converter

        cp -R ./simcomp-services/manager/target/site/jacoco/* ./simcomp-services/coverage-reports/manager
        cp -R ./simcomp-services/webots-adaptor/target/site/jacoco/* ./simcomp-services/coverage-reports/webots-adaptor
        cp -R ./simcomp-services/service-registry/target/site/jacoco/* ./simcomp-services/coverage-reports/registry
        cp -R ./simcomp-services/axis-converter/target/site/jacoco/* ./simcomp-services/coverage-reports/axis-converter
        cp ./simcomp-services/.github/index.html ./simcomp-services/coverage-reports/index.html

    - name: Create Java Docs
      run: |
        cd ./simcomp-services/webots-adaptor
        mvn clean install javadoc:javadoc
      working-directory: ${{ github.workspace }}

    - name: Deploy Coverage Reports to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        publish_dir: ./simcomp-services/coverage-reports

    - name: Log in to the Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ secrets.DOCKER_NAMESPACE }}/commons
        
    - name: Set date
      run: |
        echo "DATE=$(date +%Y%m%d)" >> $GITHUB_ENV

    - name: Build and push service-registry Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ./simcomp-services/service-registry
        push: true
        tags: ${{ secrets.DOCKER_NAMESPACE }}/service-registry:${{ env.DATE }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push demo-adaptor Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ./simcomp-services/demo-adaptor
        push: true
        tags: ${{ secrets.DOCKER_NAMESPACE }}/demo-adaptor:${{ env.DATE }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push azure-adapter Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ./simcomp-services/azure-adapter
        push: true
        tags: ${{ secrets.DOCKER_NAMESPACE }}/azure-adapter:${{ env.DATE }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push webots-adaptor Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ./simcomp-services/webots-adaptor
        push: true
        tags: ${{ secrets.DOCKER_NAMESPACE }}/webots-adaptor:${{ env.DATE }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push manager Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ./simcomp-services/manager
        push: true
        tags: ${{ secrets.DOCKER_NAMESPACE }}/manager:${{ env.DATE }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push axis-converter Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ./simcomp-services/axis-converter
        push: true
        tags: ${{ secrets.DOCKER_NAMESPACE }}/axis-converter:${{ env.DATE }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push UI Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ./simcomp-services/simcomp-ui
        push: true
        tags: ${{ secrets.DOCKER_NAMESPACE }}/simcomp-ui:${{ env.DATE }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Trigger update of image tags in local-deploy
      if: success() # Ensure this runs only if the previous steps were successful
      run: |
        curl -X POST \
          -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/jku-swe-simcomp/local-deploy/dispatches" \
          -d '{"event_type": "image-built", "client_payload": {"tag": "${{ env.DATE }}"}}'

